/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.munger.passwordkeeper.view;

import com.munger.passwordkeeper.Main;
import com.munger.passwordkeeper.struct.documents.PasswordDocument;
import com.munger.passwordkeeper.struct.documents.PasswordDocumentFile;
import java.awt.event.ActionEvent;
import java.io.File;
import javax.swing.JOptionPane;

/**
 *
 * @author hallmarklabs
 */
public class NewFile extends Page 
{    
    private boolean settingName;
    
    /**
     * Creates new form NewFile
     */
    public NewFile(boolean settingName) 
    {
        this.settingName = settingName;
        
        initComponents();
        nameIpt.setVisible(settingName);
        nameLbl.setVisible(settingName);
        
        Main.instance.enableEditActions(false);
        Main.instance.enableResetActions(false);
        Main.instance.enableDetailsActions(false);
        
        submitBtn.addActionListener((ActionEvent e) -> 
        {
            doSubmit();
        });
    }
    
    private void doSubmit()
    {
        String name = nameIpt.getText();
        
        char[] ps1 = passwordipt.getPassword();
        char[] ps2 = password2ipt.getPassword();
        
        boolean valid = validate(name, ps1, ps2);
        
        if (!valid)
            return;
        
        boolean passed = checkTargetFile(name);
        
        if (!passed)
            return;
        
        PasswordDocumentFile doc = (PasswordDocumentFile) Main.instance.mainState.document;
        
        try
        {
            if (settingName)
                doc.name = name;
            
            doc.setPassword(new String(ps1));
            doc.save();
        }
        catch(Exception e){
            Main.instance.showAlert("Failed to save file " + doc.getDetailsFilePath() + "/" + doc.name);
            return;
        }
        
        Main.instance.loadDocumentView();
    }
    
    private boolean checkTargetFile(String name)
    {
         PasswordDocumentFile doc = (PasswordDocumentFile) Main.instance.mainState.document;
        
        if (settingName)
        {
            String path = doc.getDetailsFilePath() + "/" + name;
            File targetFile = new File(path);
            
            if (targetFile.exists())
            {
                String message = "File " + path + " already exists.  Overwrite?";
                int choice = JOptionPane.showConfirmDialog(this, message, "", JOptionPane.OK_CANCEL_OPTION);
                
                if (choice == JOptionPane.CANCEL_OPTION) 
                    return false;
                
                targetFile.delete();
            }
        }
        
        return true;
    }
    
    private boolean validate(String name, char[] ps1, char[] ps2)
    {
        if (settingName && name.length() == 0)
            return false;
        
        int sz = ps1.length;
        int sz2 = ps2.length;
        
        if (sz == 0)
            return false;
        
        if (sz != sz2)
            return false;
        
        for (int i = 0; i < sz; i++)
        {
            if (ps1[i] != ps2[i])
                return false;
        }
        
        return true;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        nameLbl = new javax.swing.JLabel();
        nameIpt = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        passwordipt = new javax.swing.JPasswordField();
        jLabel2 = new javax.swing.JLabel();
        password2ipt = new javax.swing.JPasswordField();
        submitBtn = new javax.swing.JButton();

        setLayout(new java.awt.GridBagLayout());

        nameLbl.setText("Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        add(nameLbl, gridBagConstraints);

        nameIpt.setPreferredSize(new java.awt.Dimension(120, 26));
        add(nameIpt, new java.awt.GridBagConstraints());

        jLabel4.setText("Password");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        add(jLabel4, gridBagConstraints);

        passwordipt.setPreferredSize(new java.awt.Dimension(120, 26));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        add(passwordipt, gridBagConstraints);

        jLabel2.setText("Verify Password");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        add(jLabel2, gridBagConstraints);
        jLabel2.getAccessibleContext().setAccessibleDescription("");

        password2ipt.setPreferredSize(new java.awt.Dimension(120, 26));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        add(password2ipt, gridBagConstraints);

        submitBtn.setText("Create Password Repo");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
        gridBagConstraints.insets = new java.awt.Insets(40, 0, 0, 0);
        add(submitBtn, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField nameIpt;
    private javax.swing.JLabel nameLbl;
    private javax.swing.JPasswordField password2ipt;
    private javax.swing.JPasswordField passwordipt;
    private javax.swing.JButton submitBtn;
    // End of variables declaration//GEN-END:variables
}
