apply plugin: 'com.android.application'

android {
    signingConfigs {
        config {
            storeFile file('../../../.ssh/com.munger.debug-keystore.jks')
            storePassword '1600 Amphitheatre Parkway'
            keyAlias 'key0'
            keyPassword '1600 Amphitheatre Parkway'
        }
    }
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.munger.passwordkeeper"
        minSdkVersion 18
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
                cppFlags ""
            }
        }
        signingConfig signingConfigs.config
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
        }
        debug {
            signingConfig signingConfigs.config
        }
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
    lintOptions {
        checkReleaseBuilds true
        abortOnError false
    }
    externalNativeBuild {
        cmake {
            path '../libpasswordkeeper/CMakeLists.txt'
        }
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
    }
}

afterEvaluate { project ->
    project.tasks.assembleDebugAndroidTest {
        description= "builds a debuggable test apk"
        doLast {

            def rootDir = project.rootDir
            def localProperties = new File(rootDir, "local.properties")
            def sdkDir = '.'
            if (localProperties.exists()) {
                Properties properties = new Properties()
                localProperties.withInputStream { instr ->
                    properties.load(instr)
                }
                sdkDir = properties.getProperty('sdk.dir')
            }

            exec {
                commandLine sdkDir + '/build-tools/28.0.3/apksigner',
                        'sign', '--ks', android.signingConfigs.config.storeFile,
                        '--ks-pass', 'pass:' + android.signingConfigs.config.storePassword,
                        './build/outputs/apk/androidTest/debug/app-debug-androidTest.apk'

            }
        }
    }
}

repositories {
    jcenter()
    flatDir {
        dirs 'libs'
    }
}

dependencies {
    androidTestImplementation 'junit:junit:4.12'
    androidTestImplementation 'org.mockito:mockito-core:1.10.19'
    androidTestImplementation 'com.crittercism.dexmaker:dexmaker-mockito:1.4'
    androidTestImplementation 'com.crittercism.dexmaker:dexmaker:1.4'
    androidTestImplementation 'com.crittercism.dexmaker:dexmaker-dx:1.4'
    androidTestImplementation 'androidx.annotation:annotation:1.1.0'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test:rules:1.2.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'org.hamcrest:hamcrest-library:1.3'
    androidTestImplementation('androidx.test.espresso:espresso-core:3.1.0', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    androidTestImplementation('androidx.test.espresso:espresso-contrib:3.1.0', {
        exclude group: 'com.android.support', module: 'recyclerview-v7'
        exclude group: 'com.android.support', module: 'design'
        exclude group: 'com.android.support', module: 'support-v4'
    })
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.2.0'
    androidTestImplementation 'androidx.test.uiautomator:uiautomator:2.2.0'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'androidx.preference:preference:1.1.0'
    implementation 'com.google.api-client:google-api-client:1.25.0'
    implementation 'com.google.oauth-client:google-oauth-client-jetty:1.25.0'
    implementation 'com.google.apis:google-api-services-drive:v3-rev173-1.25.0'
    implementation 'com.google.code.findbugs:jsr305:3.0.2'
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-all:1.10.19'
    testImplementation 'org.hamcrest:hamcrest-library:1.3'
    testImplementation 'org.powermock:powermock-api-mockito:1.6.6'
    testImplementation 'org.powermock:powermock-module-junit4:1.6.6'
    implementation project(':libpasswordkeeper')
}
